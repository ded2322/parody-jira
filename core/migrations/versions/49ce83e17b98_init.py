"""init

Revision ID: 49ce83e17b98
Revises: 1100e42cd6a8
Create Date: 2024-03-15 12:31:54.456372

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '49ce83e17b98'
down_revision: Union[str, None] = '1100e42cd6a8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('state', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['state'], ['states.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('Tasks')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Tasks',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Tasks_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('state', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['state'], ['states.id'], name='Tasks_state_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='Tasks_pkey')
    )
    op.drop_table('tasks')
    # ### end Alembic commands ###
